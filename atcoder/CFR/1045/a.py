import io
import sys

# 下記に標準入力を記載
_InPUT = """\
7
5 3 1
4 1 2
7 7 4
8 3 7
1 1 1
4 2 2
3 3 1
"""
sys.stdin = io.StringIO(_InPUT)
# ここからコードを記載
# 要するに「赤と青を置いても 真ん中に白の余白が作れる」ので、左右対称にできる。
"""
いい視点だけど、原因は「a+b≥n のときの上塗り」だけじゃなく、正しい判定条件が “和” ではなく “パリティ（偶奇）” にあるからです。

正しい必要十分条件

最終盤面は左右対称（回文）で、青は上書きされるので最後の青は長さ b の連続1区間です。
この区間の鏡像も青でなければならない ⇒ 青区間は盤面の中心に置ける必要があります。

したがって (n - b) が偶数（= 青を中心に置ける）でないと 絶対に不可。

そのうえで

a ≤ b なら、赤は青の中に全部隠せるので 無条件で可。

a > b なら、赤の見える“両端”が左右同じになる必要がある ⇒ 赤も中心に置ける必要があるので (n - a) も偶数。
"""

t = int(input())
for _ in range(t):
    n, a, b = map(int, input().split())
    ok = ((n - b) % 2 == 0) and (a <= b or (n - a) % 2 == 0)
    print("YES" if ok else "NO")
